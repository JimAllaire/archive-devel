#!/bin/bash

set -e

# define article paths
ARTICLE=$1
HTML_ARTICLE=downloads/${ARTICLE}-download.html
HTML_ARTICLE_CONVERTED=downloads/${ARTICLE}-conv.html
MD_ARTICLE=downloads/${ARTICLE}.md
DC_METADATA=downloads/${ARTICLE}.dc.xml

# ensure the downloads directory exists
mkdir -p downloads

# download the article and convert it to utf8 encoding
ARTICLE_HTML_URL=
curl http://www.catholicworker.org/dorothyday/HTMLoutput.cfm?TextID=${ARTICLE} | \
    iconv -f iso-8859-1 -t utf-8  > ${HTML_ARTICLE}

# download the dublin core metadata
curl http://www.catholicworker.org/dorothyday/DublinCoreOutput.cfm?TextID=${ARTICLE} | \
   iconv -f iso-8859-1 -t utf-8  > ${DC_METADATA}

# make a copy of the originally downloaded file for conversion
cp ${HTML_ARTICLE} ${HTML_ARTICLE_CONVERTED}

# eliminate standalone P with non-breaking space
perl -i -pe 's/<[P|p]>&nbsp;<\/[P|p]>//g' ${HTML_ARTICLE_CONVERTED}

# substitute rouge 3/4 symbols with commas
perl -i -pe 's/ ?<FONT FACE="Symbol">Â¾<\/FONT>/,/g' ${HTML_ARTICLE_CONVERTED}

# replace <B><P align="CENTER">Foo</P> with h2
perl -i -pe 's/<b><p align="center">([^<]+)<\/p>/<h2>\1<\/h2>/i' ${HTML_ARTICLE_CONVERTED}

# replace <p align="center"><b>Funeral</b></p> with h2
perl -i -pe 's/<p align="center"><b>([^<]+)<\/b><\/p>/<h2>\1<\/h2>/i' ${HTML_ARTICLE_CONVERTED}

# replace <P><STRONG><P ALIGN="CENTER">PETER MAURIN 1877-1977</STRONG></P> with h2
perl -i -pe 's/<strong><p align="center">([^<]+)<\/strong><\/p>/<h2>\1<\/h2>/i' ${HTML_ARTICLE_CONVERTED}

# replace <B><P>The Lesson of Cuba</P> with h2
perl -i -pe 's/^<b><p>([^<]+)<\/p>/<h2>\1<\/h2>/i' ${HTML_ARTICLE_CONVERTED}

# replace <p><b>Maryfarm</b></p> with h2
perl -i -pe 's/^<p><b>([^<]+)<\/b><\/p>/<h2>\1<\/h2>/i' ${HTML_ARTICLE_CONVERTED}

# replace <P ALIGN="CENTER">* * *</P> with HR
perl -i -pe 's/<p align="center">(\* \* \*)<\/p>/- - -/i' ${HTML_ARTICLE_CONVERTED}

# cleanup orphaned </b> and </strong> tags
perl -i -pe 's/^<\/b><p>/<p>/i' ${HTML_ARTICLE_CONVERTED}
perl -i -pe 's/^<\/strong><p>/<p>/i' ${HTML_ARTICLE_CONVERTED}

# convert to markdown and remove the temporary converted file
pandoc ${HTML_ARTICLE_CONVERTED} -o ${MD_ARTICLE}
rm ${HTML_ARTICLE_CONVERTED}

# update article
./update-article $ARTICLE

